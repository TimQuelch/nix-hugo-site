I’ve written about making money in free and open source software before, but it’s a deep topic that merits additional discussion. While previously I focused on what an individual can do in order to build a career in FOSS, but today I want to talk about how you can build a sustainable business in FOSS.

=> gemini://drewdevault.com/2020/11/20/A-few-ways-to-make-money-in-FOSS.gmi Previously: A few ways to make money in FOSS

It’s a common mistake to do this the wrong way around: build the software, then the business. Because FOSS requires you to surrender your sole monetization rights, building the software first and worrying about the money later puts you at a huge risk of losing your first-mover advantage. If you’re just making a project which is useful to you and you don’t want the overhead of running a business, then that may be totally okay — you can just build the software without sweating the business issues. If you choose this path, however, be aware that the promise of free and open source software entitles anyone else to build that business without you. If you lapse in your business-building efforts and your software project starts making someone else money, then they’re not at fault for “taking your work” — you gave it to them.

=> gemini://drewdevault.com/2021/01/20/FOSS-is-to-surrender-your-monopoly.gmi Previously: Open source means surrendering your monopoly over commercial exploitation

I’ve often said that you can make money in FOSS, but not usually by accident. Don’t just build your project and wait for the big bucks to start rolling in. You need to take the business-building seriously from the start. What is the organization of your company? Who will you work with? What kind of clients or customers will you court? Do you know how to reach them? How much they’re willing to pay? What you will sell? Do you have a budget? If you want to make money from your project, sit down and answer these questions seriously.

Different kinds of software projects make money in different ways. Some projects with enterprise-oriented software may be able to sell support contracts. Some can sell consultants to work on integration and feature development. Maybe you can write books about your software, or teach courses on it. Perhaps your software, like the kind my company builds, is well-suited to being sold as a service. Some projects simply solicit donations, but this is the most difficult approach.

Whatever you choose to do, you need to choose it deliberately. You need to incorporate your business, hire an accountant, and do a lot of boring stuff which has nothing to do with the software you want to write. And if you skip this step, someone else is entitled to do all of this boring work, then stick your software on top of it and make a killing without you.
