Do you have a new systems programming project on your todo list? If you're feeling adventurous, I would like you to give it a crack in our new systems programming language, and to use it to drive improvements in the less-developed areas of our standard library.

Are you making a new coreutils implementation? A little OS kernel? A new shell?  A GUI toolkit? Database system? Web server? Whatever your systems programming use-case, we think that our language is likely to be a good fit for you, and your help in proving that, and spurring development to rise to meet your needs, would be quite welcome.

Here's our pitch:

> XXXX is a systems programming language designed to be simple and robust. XXXX uses a static type system, manual memory management, and a minimal runtime. It is well-suited to writing operating systems, system tools, compilers, networking software, and other low-level, high performance tasks. 

You can get a peek at how it feels by reading about the finger server I wrote with it:

=> gemini://drewdevault.com/2021/05/24/io_uring-finger-server.gmi Using io_uring to make a high-performance... finger server

Sounds interesting? Please tell me about your project idea!

=> mailto:sir@cmpwn.com Email me!
